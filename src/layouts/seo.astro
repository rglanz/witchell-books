---
import { SEO } from "astro-seo";
import { siteName, ogImagePath } from "@/utils/config";

interface SeoProps {
  title: string;
  description: string;
}

const { title, description } = Astro.props as SeoProps;

const canonicalUrl = new URL(Astro.url.pathname, Astro.site);

const jsonLD = `<script type="application/ld+json">
      {
      "@context": "https://schema.org/",
      "@type": "WebSite",
      "name": "${siteName}",
      "url": "${import.meta.env.SITE}"
      }
    </script>`;

function trimEndSlash(str: string) {
  if (str[str.length - 1] === "/") {
    return str.slice(0, -1);
  } else {
    return str;
  }
}

const imageUrl = trimEndSlash(Astro.site?.toString() || "") + ogImagePath;
---

<SEO
  title={title}
  description={description}
  canonical={canonicalUrl.toString()}
  openGraph={{
    basic: {
      title: title,
      type: "website",
      image: imageUrl,
      url: canonicalUrl.toString(),
    },
    optional: {
      description: description,
      siteName: siteName,
    },
    image: {
      type: "image/webp",
      width: 1200,
      height: 630,
      alt: title,
    },
  }}
  twitter={{
    card: "summary_large_image",
    title: title,
    description: description,
    image: imageUrl,
  }}
/>

<!-- JSON LD -->
<Fragment set:html={jsonLD} />
